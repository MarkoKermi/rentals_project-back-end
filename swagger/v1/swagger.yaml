openapi: 3.0.3
info:
  title: Vespa Rental App
  description: An app where users can rent Vespas.
  version: 1.0.0
servers:
  - url: http://localhost:3000/api/v1
components:
  schemas:
    Vespa:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        model:
          type: string
        price:
          type: number
          format: float
        description:
          type: string
        photo:
          type: string
      required:
        - name
        - model
        - price
        - description
        - photo

    Reservation:
      type: object
      properties:
        id:
          type: integer
          format: int64
        city:
          type: string
        pick_up_date:
          type: string
          format: date-time
        return_date:
          type: string
          format: date-time
      required:
        - city
        - pick_up_date
        - return_date

    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        password:
          type: string
          format: password
      required:
        - username
        - password

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

paths:
  /vespas:
    get:
      summary: Get all Vespas
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Vespa'

    post:
      summary: Create a Vespa
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Vespa'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vespa'

  /vespas/{vespaId}:
    parameters:
      - name: vespaId
        in: path
        description: ID of the Vespa
        required: true
        schema:
          type: integer
          format: int64
    get:
      summary: Get a Vespa by ID
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vespa'

    put:
      summary: Update a Vespa by ID
      security:
        - bearerAuth: []
      parameters:
        - name: vespaId
          in: path
          description: ID of the Vespa
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Vespa'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vespa'

  /reservations:
    get:
      summary: Get all Reservations
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Reservation'

    post:
      summary: Create a Reservation
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Reservation'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reservation'

  /reservations/{reservationId}:
    parameters:
      - name: reservationId
        in: path
        description: ID of the Reservation
        required: true
        schema:
          type: integer
          format: int64
    get:
      summary: Get a Reservation by ID
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reservation'

    put:
      summary: Update a Reservation by ID
      security:
        - bearerAuth: []
      parameters:
        - name: reservationId
          in: path
          description: ID of the Reservation
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Reservation'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reservation'

  /users:
    post:
      summary: Create a User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  /users/login:
    post:
      summary: User Login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string

  /users/{userId}:
    parameters:
      - name: userId
        in: path
        description: ID of the User
        required: true
        schema:
          type: integer
          format: int64
    get:
      summary: Get a User by ID
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

    put:
      summary: Update a User by ID
      security:
        - bearerAuth: []
      parameters:
        - name: userId
          in: path
          description: ID of the User
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  /users/{userId}/vespas:
    parameters:
      - name: userId
        in: path
        description: ID of the User
        required: true
        schema:
          type: integer
          format: int64
    get:
      summary: Get all Vespas of a User
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Vespa'

  /users/{userId}/reservations:
    parameters:
      - name: userId
        in: path
        description: ID of the User
        required: true
        schema:
          type: integer
          format: int64
    get:
      summary: Get all Reservations of a User
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Reservation'

  /users/{userId}/reservations/{reservationId}:
    parameters:
      - name: userId
        in: path
        description: ID of the User
        required: true
        schema:
          type: integer
          format: int64
      - name: reservationId
        in: path
        description: ID of the Reservation
        required: true
        schema:
          type: integer
          format: int64
    get:
      summary: Get a User's Reservation by ID
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reservation'

    put:
      summary: Update a User's Reservation by ID
      security:
        - bearerAuth: []
      parameters:
        - name: userId
          in: path
          description: ID of the User
          required: true
          schema:
            type: integer
            format: int64
        - name: reservationId
          in: path
          description: ID of the Reservation
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Reservation'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reservation'

security:
  - bearerAuth: []